// Mocks generated by Mockito 5.4.4 from annotations
// in telegrammy/test/cores/services/mock.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i8;

import 'package:dio/dio.dart' as _i2;
import 'package:image_picker/image_picker.dart' as _i10;
import 'package:mockito/mockito.dart' as _i1;
import 'package:telegrammy/cores/services/profile_api_service.dart' as _i7;
import 'package:telegrammy/cores/services/token_storage_service.dart' as _i11;
import 'package:telegrammy/features/profile/data/models/blocked_user_model.dart'
    as _i3;
import 'package:telegrammy/features/profile/data/models/contacts_toblock_model.dart'
    as _i4;
import 'package:telegrammy/features/profile/data/models/profile_info_model.dart'
    as _i6;
import 'package:telegrammy/features/profile/data/models/profile_visibility_model.dart'
    as _i9;
import 'package:telegrammy/features/profile/data/models/stories_model.dart'
    as _i5;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeDio_0 extends _i1.SmartFake implements _i2.Dio {
  _FakeDio_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeBlockedUsersResponse_1 extends _i1.SmartFake
    implements _i3.BlockedUsersResponse {
  _FakeBlockedUsersResponse_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeContactsResponse_2 extends _i1.SmartFake
    implements _i4.ContactsResponse {
  _FakeContactsResponse_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeStoryResponse_3 extends _i1.SmartFake implements _i5.StoryResponse {
  _FakeStoryResponse_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeProfileInfoResponse_4 extends _i1.SmartFake
    implements _i6.ProfileInfoResponse {
  _FakeProfileInfoResponse_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeProfilePictureResponse_5 extends _i1.SmartFake
    implements _i6.ProfilePictureResponse {
  _FakeProfilePictureResponse_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [ProfileApiService].
///
/// See the documentation for Mockito's code generation for more information.
class MockProfileApiService extends _i1.Mock implements _i7.ProfileApiService {
  MockProfileApiService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Dio get dio => (super.noSuchMethod(
        Invocation.getter(#dio),
        returnValue: _FakeDio_0(
          this,
          Invocation.getter(#dio),
        ),
      ) as _i2.Dio);

  @override
  _i8.Future<void> updateProfileVisibility(
          _i9.ProfileVisibility? profileVisibility) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateProfileVisibility,
          [profileVisibility],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<_i3.BlockedUsersResponse> getBlockedUsers() => (super.noSuchMethod(
        Invocation.method(
          #getBlockedUsers,
          [],
        ),
        returnValue: _i8.Future<_i3.BlockedUsersResponse>.value(
            _FakeBlockedUsersResponse_1(
          this,
          Invocation.method(
            #getBlockedUsers,
            [],
          ),
        )),
      ) as _i8.Future<_i3.BlockedUsersResponse>);

  @override
  _i8.Future<_i4.ContactsResponse> getContacts() => (super.noSuchMethod(
        Invocation.method(
          #getContacts,
          [],
        ),
        returnValue:
            _i8.Future<_i4.ContactsResponse>.value(_FakeContactsResponse_2(
          this,
          Invocation.method(
            #getContacts,
            [],
          ),
        )),
      ) as _i8.Future<_i4.ContactsResponse>);

  @override
  _i8.Future<_i5.StoryResponse> getUserStories() => (super.noSuchMethod(
        Invocation.method(
          #getUserStories,
          [],
        ),
        returnValue: _i8.Future<_i5.StoryResponse>.value(_FakeStoryResponse_3(
          this,
          Invocation.method(
            #getUserStories,
            [],
          ),
        )),
      ) as _i8.Future<_i5.StoryResponse>);

  @override
  _i8.Future<void> createStory(_i5.StoryCreation? storyCreation) =>
      (super.noSuchMethod(
        Invocation.method(
          #createStory,
          [storyCreation],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> deleteStory(String? storyId) => (super.noSuchMethod(
        Invocation.method(
          #deleteStory,
          [storyId],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<_i6.ProfileInfoResponse> getProfileInfo() => (super.noSuchMethod(
        Invocation.method(
          #getProfileInfo,
          [],
        ),
        returnValue: _i8.Future<_i6.ProfileInfoResponse>.value(
            _FakeProfileInfoResponse_4(
          this,
          Invocation.method(
            #getProfileInfo,
            [],
          ),
        )),
      ) as _i8.Future<_i6.ProfileInfoResponse>);

  @override
  _i8.Future<void> updateProfileInfo(_i6.ProfileInfo? profileInfo) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateProfileInfo,
          [profileInfo],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> updateUserActivityStatus(String? status) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateUserActivityStatus,
          [status],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> updateUserEmail(String? email) => (super.noSuchMethod(
        Invocation.method(
          #updateUserEmail,
          [email],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> updateUsername(String? username) => (super.noSuchMethod(
        Invocation.method(
          #updateUsername,
          [username],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> updateUserPhoneNumber(String? phoneNumber) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateUserPhoneNumber,
          [phoneNumber],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<_i6.ProfilePictureResponse> updateProfilePic(
          _i10.XFile? pickedFile) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateProfilePic,
          [pickedFile],
        ),
        returnValue: _i8.Future<_i6.ProfilePictureResponse>.value(
            _FakeProfilePictureResponse_5(
          this,
          Invocation.method(
            #updateProfilePic,
            [pickedFile],
          ),
        )),
      ) as _i8.Future<_i6.ProfilePictureResponse>);

  @override
  _i8.Future<void> deleteProfilePicture() => (super.noSuchMethod(
        Invocation.method(
          #deleteProfilePicture,
          [],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);
}

/// A class which mocks [TokenStorageService].
///
/// See the documentation for Mockito's code generation for more information.
class MockTokenStorageService extends _i1.Mock
    implements _i11.TokenStorageService {
  MockTokenStorageService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i8.Future<void> saveToken(String? token) => (super.noSuchMethod(
        Invocation.method(
          #saveToken,
          [token],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> saveEmail(String? email) => (super.noSuchMethod(
        Invocation.method(
          #saveEmail,
          [email],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<String?> getToken() => (super.noSuchMethod(
        Invocation.method(
          #getToken,
          [],
        ),
        returnValue: _i8.Future<String?>.value(),
      ) as _i8.Future<String?>);

  @override
  _i8.Future<String?> getEmail() => (super.noSuchMethod(
        Invocation.method(
          #getEmail,
          [],
        ),
        returnValue: _i8.Future<String?>.value(),
      ) as _i8.Future<String?>);

  @override
  _i8.Future<void> deleteToken() => (super.noSuchMethod(
        Invocation.method(
          #deleteToken,
          [],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> deleteEmail() => (super.noSuchMethod(
        Invocation.method(
          #deleteEmail,
          [],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);
}
